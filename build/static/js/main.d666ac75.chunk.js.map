{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","tranformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","alert","JSON","stringify","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderLeader","left","object","body","heading","About","leaders","title","list","RenderDish","RenderComments","comments","postComment","dishId","comment","review","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isModalOpen","toggleModal","setState","rating","feedback","Fragment","outline","isOpen","toggle","value","DishDetail","console","log","Header","isNavOpen","toggleNav","handleLogin","event","username","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","dishesFailed","errmess","addDishes","commmentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","classNames","timeout","path","component","filter","featured","promotions","exact","match","parseInt","params","issLoading","commentsErrMess","resetFeedbackForm","location","key","withRouter","connect","newFeedback","feedbacks","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d666ac75.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"/>\n            <p>Loading . . . </p>\n        </div>\n    )\n}","export const baseUrl = 'http://localhost:3001/'\n","import React from 'react'\nimport { Card, CardImg, CardText, CardTitle, CardBody, CardSubtitle } from 'reactstrap';\nimport {Loading} from \"./LoadingComponent\"\nimport { baseUrl } from \"../shared/baseUrl\"\nimport { FadeTransform } from 'react-animation-components'\n\nfunction RenderCard({item, isLoading, errMess}){\n    if (isLoading) {\n        return (\n            <Loading/>\n        )\n    } else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        )\n    } else\n        return (\n            <FadeTransform in\n                           tranformProps={{\n                               exitTransform: 'scale(0.5) translateY(-50%)'\n                           }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name}/>\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        )\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish}\n                                isLoading={props.dishesLoading}\n                                errMess={props.dishesErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                                isLoading={props.promosLoading}\n                                errMess={props.promosErrMess}/>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                                isLoading={props.leadersLoading}\n                                errMess={props.leadersErrMess}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport { Loading } from \"./LoadingComponent\"\nimport { baseUrl } from \"../shared/baseUrl\"\n\nfunction RenderMenuItem({ dish, onClick }) {\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`} >\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay className=\"ml-5\">\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    )\n}\n\nconst Menu = (props) => {\n    const menu = props.dishes.dishes.map(dish => {\n        return (\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish}/>\n            </div>\n        )\n    })\n    if (props.dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading/>\n                </div>\n            </div>\n        )\n    } else if (props.dishes.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.errMess}</h4>\n                </div>\n            </div>\n        )\n    } else\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr/>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        )\n    }\n\n\nexport default Menu;","import React, {Component} from 'react'\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from \"reactstrap\"\nimport {Link} from \"react-router-dom\"\nimport {Control, Form, Errors, actions} from \"react-redux-form\"\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\nconst minLength = (len) => (val) => (val) && (val.length >= len)\nconst isNumber = (val) => !isNaN(Number(val))\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(values) {\n        alert(\"Thank you for your feedback \" + JSON.stringify(values))\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message, values.id)\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br/>\n                            Clear Water Bay, Kowloon<br/>\n                            HONG KONG<br/>\n                            <i className=\"fa fa-phone\"/>: +852 1234 5678<br/>\n                            <i className=\"fa fa-fax\"/>: +852 8765 4321<br/>\n                            <i className=\"fa fa-envelope\"/>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i\n                                className=\"fa fa-phone\"/> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skype.com\"><i\n                                className=\"fa fa-skype\"/> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i\n                                className=\"fa fa-envelope-o\"/> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                                  placeholder=\"First Name\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, minLength: minLength(3), maxLength: maxLength(15)\n                                                  }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                                  placeholder=\"Last Name\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, minLength: minLength(3), maxLength: maxLength(15)\n                                                  }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                                  placeholder=\"Tel. Number\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                                  }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                                  placeholder=\"Email\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, validEmail\n                                                  }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                              className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                                    className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                                      rows=\"12\"\n                                                      className=\"form-control\"/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Contact","import React from 'react'\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport  { baseUrl } from \"../shared/baseUrl\";\n\nfunction RenderLeader({leader}) {\n    return (\n        <Media>\n            <Media left className=\"col-2\">\n                <Media object src={baseUrl + leader.image} alt={leader.name}/>\n            </Media>\n            <Media body className=\"col-10 mb-2\">\n                <Media heading>{leader.name}</Media>\n                <p>{leader.designation}</p>\n                {leader.description}\n            </Media>\n        </Media>\n    )\n}\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <RenderLeader leader={leader}/>\n        )\n    })\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        {leaders}\n                    </Media>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About","import React, {Component} from 'react'\nimport {Card, CardImg, CardText, CardTitle, Breadcrumb, BreadcrumbItem, Button, Col, Row, ModalHeader, ModalBody, Label, Modal} from 'reactstrap'\nimport {Control, LocalForm, Errors} from \"react-redux-form\"\nimport { Link } from 'react-router-dom'\nimport { Loading } from './LoadingComponent'\nimport { baseUrl } from \"../shared/baseUrl\"\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components'\n\nfunction RenderDish({dish}) {\n    return (\n        <Card className=\"col-12 col-md-5 m-1\">\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\n            <CardTitle>{dish.name}</CardTitle>\n            <CardText>{dish.description}</CardText>\n        </Card>\n    );\n}\n\n\nfunction RenderComments({comments, postComment, dishId}) {\n    const comment = comments.map(review => {\n        return (\n            <div key={review.id}>\n                <ul className=\"list-unstyled\">\n                    <li className=\"list-item\">{review.comment}</li>\n                    <li className=\"list-item\">-- {review.author}, {new Intl.DateTimeFormat('en-US', {\n                        year: 'numeric',\n                        month: 'short',\n                        day: '2-digit'\n                    }).format(new Date(Date.parse(review.date)))}</li>\n                </ul>\n            </div>\n\n        )\n    })\n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <h4>Comments</h4>\n            {comment}\n            <CommentForm dishId={dishId} postComment={postComment}/>\n        </div>\n    )\n}\n\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        )\n    } else if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        )\n    } else if (props.dish != null) {\n        console.log('DishDetail Component render invoked');\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderDish dish={props.dish}/>\n                    <RenderComments\n                        comments={props.comments}\n                        postComment={props.postComment}\n                        dishId={props.dish.id}/>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\nconst minLength = (len) => (val) => (val) && (val.length >= len)\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state= {\n            isModalOpen: false\n        }\n\n        this.toggleModal = this.toggleModal.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    }\n\n    handleSubmit(values) {\n        this.toggleModal()\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.feedback)\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\"/> Submit Comment\n                </Button>\n                <div>\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"rating\" md={3}>Rating</Label>\n                                    <Col md={12}>\n                                        <Control.select model=\".rating\" name=\"rating\"\n                                                        className=\"form-control\">\n                                            <option>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n                                        </Control.select>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group \">\n                                    <Label htmlFor=\"author\" md={3}>Your Name</Label>\n                                    <Col md={12}>\n                                        <Control.text model=\".author\" name=\"author\"\n                                                      className=\"form-control\"\n                                                      validators={{\n                                                          maxLength: maxLength(15),\n                                                          minLength: minLength(3)\n                                                      }}>\n                                        </Control.text>\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".author\"\n                                            show=\"touched\"\n                                            messages={{\n                                                maxLength: 'Must be 15 characters or less',\n                                                minLength: 'Must be greater than 2 characters'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"feedback\" md={3}>Feedback</Label>\n                                    <Col md={12}>\n                                        <Control.textarea model=\".feedback\" name=\"feedback\"\n                                                      className=\"form-control\" rows={6}>\n                                        </Control.textarea>\n                                    </Col>\n                                </Row>\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                            </LocalForm>\n                        </ModalBody>\n                    </Modal>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default DishDetail;","import React, {Component} from 'react'\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavbarToggler,\n    Collapse,\n    NavItem,\n    Jumbotron,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup, Input, Label\n} from 'reactstrap'\nimport {NavLink} from 'react-router-dom'\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        }\n\n        this.toggleNav = this.toggleNav.bind(this)\n        this.toggleModal = this.toggleModal.bind(this)\n        this.handleLogin = this.handleLogin.bind(this)\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        })\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    }\n\n    handleLogin(event) {\n        this.toggleModal()\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"/assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante con Fusion\"/>\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"/> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"/> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"/> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\"/> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"/>Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion\n                                    experience. Our lipsmacking creations will tickle your culinary senses.</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} />\n                                Remember me\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Header","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","export const ADD_COMMENT = 'ADD_COMMENT'\nexport const DISHES_LOADING = 'DISHES_LOADING'\nexport const DISHES_FAILED = 'DISHES_FAILED'\nexport const ADD_DISHES = 'ADD_DISHES'\nexport const ADD_COMMENTS = 'ADD_COMMENTS'\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED'\nexport const PROMOS_LOADING = 'PROMOS_LOADING'\nexport const ADD_PROMOS = 'ADD_PROMOS'\nexport const PROMOS_FAILED = 'PROMOS_FAILED'\nexport const LEADERS_LOADING = 'LEADERS_LOADING'\nexport const ADD_LEADERS = 'ADD_LEADERS'\nexport const LEADERS_FAILED = 'LEADERS_FAILED'\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK'","import * as ActionTypes from './ActionTypes'\nimport { baseUrl } from '../shared/baseUrl'\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n})\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    newComment.date = new Date().toISOString()\n\n    return fetch(baseUrl + 'comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n                if (response.ok) {\n                    return response\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText)\n                    error.response = response\n                    throw error\n                }\n            },\n            error => {\n                let errmess = new Error(error.message)\n                throw errmess\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addComment(dishes)))\n        .catch(error => {\n            console.log('Post comments', error.message)\n            alert('Your comment could not be posted\\nError: ' + error.message)\n        })\n}\n\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n})\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message, id) => (dispatch) => {\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message,\n        id: id\n    }\n    newFeedback.date = new Date().toISOString()\n\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n                if (response.ok) {\n                    return response\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText)\n                    error.response = response\n                    throw error\n                }\n            },\n            error => {\n                let errmess = new Error(error.message)\n                throw errmess\n            })\n        .then(response => response.json())\n        .then(feedbacks => dispatch(addFeedback(feedbacks)))\n        .catch(error => {\n            console.log('Post feedback', error.message)\n            alert('Your feedback could not be sent\\nError: ' + error.message)\n        })\n}\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true))\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n                if (response.ok) {\n                    return response\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText)\n                    error.response = response\n                    throw error\n                }\n            },\n            error => {\n                let errmess = new Error(error.message)\n                throw errmess\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)))\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n})\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n})\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n})\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n                if (response.ok) {\n                    return response\n                } else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText)\n                    error.response = response\n                    throw error\n                }\n            },\n            error => {\n                let errmess = new Error(error.message)\n                throw errmess\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commmentsFailed(error.message)))\n}\n\nexport const commmentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n})\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n})\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true))\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response\n            }\n            else {\n                let error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response\n                throw error\n            }\n        },\n            error => {\n                let errmess = new Error(error.message)\n                throw errmess\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)))\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n})\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n})\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n})\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true))\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n                if (response.ok) {\n                    return response\n                }\n                else {\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText)\n                    error.response = response\n                    throw error\n                }\n            },\n            error => {\n                let errmess = new Error(error.message)\n                throw errmess\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)))\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n})\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n})\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n})\n","import React, {Component} from 'react'\nimport Home from './HomeComponent'\nimport Menu from './MenuComponent'\nimport Contact from './ContactComponent'\nimport About from \"./AboutComponent\";\nimport DishDetail from './DishdetailComponent'\nimport Header from './HeaderComponent'\nimport Footer from './FooterComponent'\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport {fetchComments, fetchDishes, fetchLeaders, fetchPromos, postComment, postFeedback} from \"../redux/ActionCreators\"\nimport { actions } from 'react-redux-form'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message, id) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message, id)),\n    fetchDishes: () => {dispatch(fetchDishes())},\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n    fetchComments: () => {dispatch(fetchComments())},\n    fetchPromos: () => {dispatch(fetchPromos())},\n    fetchLeaders: () => {dispatch(fetchLeaders())}\n})\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchDishes()\n        this.props.fetchComments()\n        this.props.fetchPromos()\n        this.props.fetchLeaders()\n    }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                      dishesLoading={this.props.dishes.isLoading}\n                      dishesErrMess={this.props.dishes.errMess}\n                      promotion={this.props.promotions.promotions.filter((promotion) => promotion.featured)[0]}\n                      promosLoading={this.props.promotions.isLoading}\n                      promosErrMess={this.props.promotions.errMess}\n                      leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                      leadersLoading={this.props.leaders.isLoading}\n                      leadersErrMess={this.props.leaders.errMess}/>\n            )\n        }\n\n        const DishWithId = ({match}) => {\n            return (\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n                            issLoading={this.props.dishes.isLoading}\n                            errMess={this.props.dishes.errMess}\n                            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n                            commentsErrMess={this.props.comments.errMess}\n                            postComment={this.props.postComment}\n                />\n            )\n        }\n\n        return (\n            <div>\n                <Header/>\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch>\n                            <Route path=\"/home\" component={HomePage}/>\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes}/>}/>\n                            <Route path=\"/menu/:dishId\" component={DishWithId}/>\n                            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders}/>}/>\n                            <Route exact path=\"/contactus\"\n                                   component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>}/>\n                            <Redirect to=\"/home\"/>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))","import * as ActionTypes from './ActionTypes'\n\nexport const Dishes = (state = {isLoading: true, errMess: null, dishes: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return{...state, isLoading: false, errMess: null, dishes: action.payload}\n\n        case ActionTypes.DISHES_LOADING:\n            return{...state, isLoading: true, errMess: null, dishes: []}\n\n        case ActionTypes.DISHES_FAILED:\n            return{...state, isLoading: false, errMess: action.payload, dishes: []}\n\n        default:\n            return state\n    }\n}","import * as ActionTypes from './ActionTypes'\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload}\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []}\n\n        case ActionTypes.ADD_COMMENT:\n            let comment = action.payload\n            return {...state, comments: state.comments.concat(comment)}\n\n        default:\n            return state\n    }\n}","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Promotions = (state = {\n        isLoading: true,\n        errMess: null,\n        promotions: []\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return{...state, isLoading: false, errMess: null, promotions: action.payload}\n\n        case ActionTypes.PROMOS_FAILED:\n            return{...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return{...state, isLoading: false, errMess: action.payload, promotions: []}\n\n        default:\n            return state\n    }\n}","import { LEADERS } from '../shared/leaders'\nimport * as ActionTypes from \"./ActionTypes\";\n\nexport const Leaders = (state = {isLoading: true, errMess: null, leaders: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return{...state, isLoading: false, errMess: null, leaders: action.payload}\n\n        case ActionTypes.LEADERS_LOADING:\n            return{...state, isLoading: true, errMess: null, leaders: []}\n\n        case ActionTypes.LEADERS_FAILED:\n            return{...state, isLoading: false, errMess: action.payload, leaders: []}\n\n        default:\n            return state\n    }\n}\n","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import React, {Component} from 'react'\nimport Main from './components/MainComponent'\nimport './App.css'\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport {ConfigureStore} from \"./redux/configureStore\";\n\nconst store = ConfigureStore()\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div>\n                        <Main/>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { createForms } from 'react-redux-form'\nimport { Dishes } from \"./dishes\"\nimport { Comments } from \"./comments\"\nimport {Promotions} from \"./promotions\"\nimport {Leaders} from \"./leaders\"\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport {InitialFeedback} from \"./forms\";\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    )\n    return store\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}